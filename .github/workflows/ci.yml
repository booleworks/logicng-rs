name: CI

on: [ push, pull_request, workflow_dispatch ]

env:
  CARGO_TERM_COLOR: always

jobs:
  testing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: cargo test --verbose

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run clippy
        run: cargo clippy

  deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/install-action@cargo-deny
      - name: Run deny
        run: cargo deny check

  check-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: Install rustfmt
        run: rustup component add rustfmt --toolchain nightly
      - name: Check formatting
        run: cargo +nightly fmt -- --check

  coverage:
    name: Test Coverage
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --lcov --output-path lcov.info
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: lcov.info
          flags: unittests
          name: logicng-ci-coverage
          fail_ci_if_error: false
          verbose: true
